<!DOCTYPE html>
<html>
<head>
    <title>Jewelry Shop</title>
    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        /* Basic Styling - Adapt to your design */
        .product-listing {
            display: flex;
            flex-direction: column; /* Stack content vertically */
            align-items: stretch;    /* Stretch items to fill container */
            width: 100%;
            max-width: 1200px;       /* Maximum width for the entire component */
            margin: 20px auto;       /* Center the component horizontally */
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .product-filter-section {
            display: flex;                /* Arrange filters side by side */
            align-items: center;          /* Align items vertically */
            justify-content: space-between; /* Distribute space evenly */
            width: 100%;
            margin-bottom: 20px;          /* Space between filters and product grid */
        }

        .filters {
            display: flex;
            align-items: center;
            flex-wrap: wrap;            /* Allow filters to wrap on smaller screens */
            margin-right: 20px;          /* Space between the filter label and the filter elements */
        }

        .filters label {
            margin-right: 10px;          /* Space between each filter label and its input */
        }

        .filters select,
        .filters input[type="number"] {
            margin-right: 15px;          /* Spacing for filter elements */
            padding: 8px;                /* Padding inside filter elements */
            border-radius: 5px;
            border: 1px solid #ddd;
            font-size: 14px;              /* Font size for the filter elements */
            width: auto;
            flex-shrink: 0;
        }

        .sort-by {
            text-align: right;           /* Align sort options to the right */
        }

        .sort-by label {
            margin-right: 10px;          /* Space between the sort label and select */
        }

        .sort-by select {
            padding: 8px;                /* Padding inside sort select */
            border-radius: 5px;
            border: 1px solid #ddd;
            font-size: 14px;              /* Font size for the sort select */
            width: auto;
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Dynamic grid */
            gap: 20px;                    /* Space between products */
            width: 100%;
        }

        .product-card {
            padding: 15px;
            background-color: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
            text-align: center;
            transition: transform 0.2s ease-in-out;
        }

        .product-card:hover {
            transform: translateY(-5px);
        }

        .product-card img {
            width: 100%;                 /* Make images responsive */
            height: 200px;                /* Consistent height for images */
            object-fit: cover;             /* Maintain aspect ratio */
            border-radius: 5px;
            margin-bottom: 10px;          /* Space below image */
        }

        .product-card h2 {
            font-size: 1.2em;
            margin-bottom: 5px;
        }

        .product-card .price {
            color: #007bff;
            font-weight: bold;
            margin-bottom: 10px;          /* Space above the detail link */
        }

        .product-card .view-detail {
            display: inline-block;
            padding: 8px 16px;            /* Padding inside the detail link */
            background-color: #007bff;
            color: white;
            border-radius: 5px;
            text-decoration: none;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
            width: 100%;
        }

        .pagination a {
            padding: 8px 12px;            /* Padding inside pagination links */
            margin: 0 5px;
            border: 1px solid #ddd;
            border-radius: 5px;
            text-decoration: none;
            color: #555;
        }

        .pagination a.active {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .product-filter-section {
                flex-direction: column;   /* Stack filters and sort on smaller screens */
                align-items: stretch;    /* Stretch items to fill container */
            }

            .filters {
                margin-bottom: 15px;      /* Space between filters and sort options */
            }

            .sort-by {
                text-align: left;           /* Align sort options to the left */
            }

            .product-grid {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Smaller product cards */
            }
        }
    </style>
</head>
<body>
    <div class="product-listing">
        <div class="product-filter-section">
          <div class="filters">
            <label for="category">Category:</label>
            <select name="category" id="category" onchange="window.location.href='?category=' + this.value">
              <option value="">All Categories</option>
                <% categories.forEach(cat => { %>
                  <option value="<%= cat._id %>"><%= cat.name %></option>
                <% }); %>
            </select>

            <label for="priceMin">Min Price:</label>
            <input type="number" id="priceMin" name="priceMin" placeholder="Min">

            <label for="priceMax">Max Price:</label>
            <input type="number" id="priceMax" name="priceMax" placeholder="Max">
            <button onclick="applyPriceFilter()">Apply Price</button>

            <label for="search">Search:</label>
            <input type="text" id="search" name="search" placeholder="Search Products">
            <button onclick="applySearch()">Search</button>
          </div>

            <div class="sort-by">
                <label for="sortBy">Sort By:</label>
                <select id="sortBy" name="sortBy">
                    <option value="">Default Sorting</option>
                    <option value="priceAsc">Price: Low to High</option>
                    <option value="priceDesc">Price: High to Low</option>
                    <!-- Add more sorting options as needed -->
                </select>
            </div>
        </div>

        <div class="product-grid">
            <% products.forEach(product => { %>
                <div class="product-card">
                    <img src="<%= product.images && product.images.length > 0 ? product.images[0] : '/images/default-product.png' %>" alt="<%= product.name %>">
                    <h2><%= product.name %></h2>
                    <p><%= product.description %></p>
                    <p class="price">$<%= product.price %></p>
                    <a href="/productDetail/<%= product._id %>" class="view-detail">View Detail</a>
                </div>
            <% }); %>
        </div>

        <div class="pagination">
          <% paginationLinks.forEach(link => { %>
            <a href="?page=<%= link.page %>" class="<%= link.active ? 'active' : '' %>"><%= link.page %></a>
          <% }); %>
        </div>
    </div>
    <script>
    function applyPriceFilter() {
    let priceMin = document.getElementById('priceMin').value;
    let priceMax = document.getElementById('priceMax').value;
    let baseUrl = window.location.pathname + '?';

    // Add existing query parameters
    let existingParams = new URLSearchParams(window.location.search);
    if (existingParams.has('category')) {
        baseUrl += 'category=' + existingParams.get('category') + '&';
    }
      if (existingParams.has('q')) {
        baseUrl += 'q=' + existingParams.get('q') + '&';
    }

    // Add price filters
    if (priceMin) {
        baseUrl += 'priceMin=' + priceMin + '&';
    }
    if (priceMax) {
        baseUrl += 'priceMax=' + priceMax + '&';
    }

    // Remove trailing '&' and redirect
    baseUrl = baseUrl.replace(/&+$/, '');
    window.location.href = baseUrl;
    }
  function applySearch() {
    let q = document.getElementById('search').value;
    let baseUrl = window.location.pathname + '?';

    // Add existing query parameters
    let existingParams = new URLSearchParams(window.location.search);
    if (existingParams.has('category')) {
        baseUrl += 'category=' + existingParams.get('category') + '&';
    }

    // Add search query
    if (q) {
        baseUrl += 'q=' + q + '&';
    }

    // Remove trailing '&' and redirect
    baseUrl = baseUrl.replace(/&+$/, '');
    window.location.href = baseUrl;
}
    </script>
</body>
</html>